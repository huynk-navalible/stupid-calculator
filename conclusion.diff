1,2d0
< import math
< import argparse
4,14c2,3
< from tkinter import messagebox
< 
< # --- Command line setup ---
< parser = argparse.ArgumentParser()
< parser.add_argument('--debug', action='store_true', help='uses the debug mode')
< args = parser.parse_args()
< 
< # --- Console calculator ---
< def console_calc():
<     op = input("choose pls (+,-,*,/ or sqrt)\n")
<     raw = input("enter the number (separate it by spaces vro):\n").split()
---
> from tkinter import font as tkFont
> import math
15a5
> def calculate():
17c7,34
<         nums = [float(x) for x in raw]
---
>         numbers = [float(n) for n in entry_numbers.get().split()]
>         op = operator.get()
>         result = None
> 
>         if op == "+":
>             result = sum(numbers)
>         elif op == "-":
>             result = numbers[0]
>             for n in numbers[1:]:
>                 result -= n
>         elif op == "*":
>             result = 1
>             for n in numbers:
>                 result *= n
>         elif op == "/" or op == ":":
>             result = numbers[0]
>             for n in numbers[1:]:
>                 if n == 0:
>                     result_label.config(text="im not bugging out bc of u do it urself")
>                     return
>                 result /= n
>         elif op == "sqrt" or op == "square root":
>             result = [round(math.sqrt(n), 2) for n in numbers]
>         else:
>             result_label.config(text="if u r typing squareroot pls just type it with spaces vro")
>             return
> 
>         result_label.config(text=f"Result: {round(result, 2) if isinstance(result, float) else result}")
19,49c36,37
<         if args.debug:
<             print("ure on test mode")
<             print("choose the operator (i hope ure not slow like a snail)")
<             print("numbers received:", nums)
< 
<         def calculate(op, nums):
<             if op == "+":
<                 return sum(nums)
<             elif op == "-":
<                 result = nums[0]
<                 for n in nums[1:]:
<                     result -= n
<                 return result
<             elif op == "*":
<                 result = 1
<                 for n in nums:
<                     result *= n
<                 return result
<             elif op in ["/", ":"]:
<                 result = nums[0]
<                 for n in nums[1:]:
<                     if n == 0:
<                         return "division by 0 vro"
<                     result /= n
<                 return result
<             elif op in ["sqrt", "square root"]:
<                 return [round(math.sqrt(n), 2) for n in nums]
<             else:
<                 return "idk what u meant"
<         
<         print("Result is:", calculate(op, nums))
---
>     except ValueError:
>         result_label.config(text="i dont think you typed numbers...")
50a39,44
> # pi multiply by user input
> def pmtp_gui():
>     try:
>         so = float(operator.get())
>         ketqua = round(math.pi * num, 5)
>         ketqua_label.config(text=f"pi * {so} = {ketqua}")
52c46,72
<         print("what did u just type in ???")
---
>         ketqua_label.config(text="why do u want me to do ts vro")
> 
> # GUI setup
> root = tk.Tk()
> root.title("my stupid calculator")
> root.configure(bg="#1e1e1e")
> 
> bigFont = tkFont.Font(family="Liberation Mono", size=23)
> dRkM = "#1e1e1e"
> lGhM = "#ffffff"
> OoLC = "#00ffcc"
> sObN = "#444444"
> 
> tk.Label(root, text="choose ur operator (+, -, *, /, sqrt):\n", bg=dRkM, fg=OoLC, font=bigFont).pack()
> operator = tk.Entry(root, font=bigFont, bg="#2e2e2e", fg=lGhM, insertbackground=lGhM)
> operator.pack(pady=10)
> 
> tk.Label(root, text="type numbers pls (separated by spaces):\n", bg=dRkM, fg=OoLC, font=bigFont).pack()
> entry_numbers = tk.Entry(root, width=40, font=bigFont, bg="#2e2e2e", fg=lGhM, insertbackground=lGhM)
> entry_numbers.pack(pady=10)
> 
> tk.Button(root, text="Calculate pls", command=calculate, font=bigFont, bg=sObN, fg=lGhM, activebackground="#616161", activeforeground=lGhM).pack(pady=10)
> result_label = tk.Label(root, font=bigFont, text="u havent calculated this yet vro", bg=dRkM, fg=OoLC)
> result_label.pack(pady=10)
> 
> # the pi funcion
> tk.Button(root, text="pi * ur number", command=pmtp_gui, font=bigFont, bg=sObN, fg=lGhM).pack(pady=10)
54,142c74
< # --- GUI calculator ---
< def gui_calc():
<     root = tk.Tk()
<     root.title("Vro Calculator")
<     root.configure(bg="#2b2b2b")
< 
<     def gui_style(widget):
<         widget.configure(
<             bg="#2b2b2b",
<             fg="#f0f0f0",
<             insertbackground="white",
<             highlightbackground="#444",
<             font=("Helvetica", 12)
<         )
< 
<     def pmtp_gui():
<         try:
<             val = float(entry.get())
<             result = math.pi * val
<             result_label.config(text=f"Ï€ Ã— {val} = {round(result, 5)}")
<         except ValueError:
<             result_label.config(text="why do u want me to do ts vro")
< 
<     def calculate_gui():
<         try:
<             raw = entry.get()
<             op = operator.get().strip()
<             nums = [float(x) for x in raw.split()]
< 
<             if op == "+":
<                 res = sum(nums)
<             elif op == "-":
<                 res = nums[0]
<                 for n in nums[1:]:
<                     res -= n
<             elif op == "*":
<                 res = 1
<                 for n in nums:
<                     res *= n
<             elif op in ["/", ":"]:
<                 res = nums[0]
<                 for n in nums[1:]:
<                     if n == 0:
<                         result_label.config(text="division by zero vro")
<                         return
<                     res /= n
<             elif op in ["sqrt", "square root"]:
<                 res = [round(math.sqrt(n), 2) for n in nums]
<             else:
<                 result_label.config(text="invalid operator")
<                 return
< 
<             result_label.config(text=f"Result: {res}")
< 
<         except ValueError:
<             result_label.config(text="u gave me bad input ðŸ˜­")
< 
<     # --- GUI widgets ---
<     entry = tk.Entry(root, width=40)
<     gui_style(entry)
<     entry.pack(pady=10)
< 
<     operator = tk.Entry(root, width=20)
<     gui_style(operator)
<     operator.insert(0, "+")  # default operator
<     operator.pack(pady=5)
< 
<     calc_btn = tk.Button(root, text="Calculate", command=calculate_gui, bg="#444", fg="white", font=("Helvetica", 12))
<     calc_btn.pack(pady=5)
< 
<     pi_btn = tk.Button(root, text="Ï€ Ã— number", command=pmtp_gui, bg="#555", fg="white", font=("Helvetica", 12))
<     pi_btn.pack(pady=5)
< 
<     result_label = tk.Label(root, text="", bg="#2b2b2b", fg="white", font=("Helvetica", 13))
<     result_label.pack(pady=10)
< 
<     root.mainloop()
< 
< # --- Main ---
< if __name__ == "__main__":
<     print("choose mode vro:\n1. CLI\n2. GUI")
<     mode = input("enter 1 or 2: ").strip()
< 
<     if mode == "1":
<         console_calc()
<     elif mode == "2":
<         gui_calc()
<     else:
<         print("u typed smth wrong")
---
> root.mainloop()
